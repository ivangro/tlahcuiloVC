package svg.gui;

import edu.uci.ics.jung.algorithms.layout.CircleLayout;
import edu.uci.ics.jung.algorithms.layout.Layout;
import edu.uci.ics.jung.graph.Graph;
import edu.uci.ics.jung.visualization.BasicVisualizationServer;
import edu.uci.ics.jung.visualization.VisualizationViewer;
import edu.uci.ics.jung.visualization.control.DefaultModalGraphMouse;
import edu.uci.ics.jung.visualization.control.ModalGraphMouse;
import edu.uci.ics.jung.visualization.picking.PickedState;
import edu.uci.ics.jung.visualization.renderers.Renderer;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.AbstractListModel;
import javax.swing.DefaultListModel;
import org.apache.commons.collections15.Transformer;
import svg.context.SVGEdge;
import svg.context.SimpleElement;
import svg.core.*;
import svg.engagement.*;
/**
 * Class to visualize the available atoms inside the atom store
 * @author Ivan Guerrero
 */
public class AtomViewer extends javax.swing.JDialog {

    /**
     * Creates new form AtomViewer
     */
    public AtomViewer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        DefaultListModel<SVGCell> model = (DefaultListModel<SVGCell>)lbCells.getModel();
        for (SVGCell cell : SVGAtomStore.getInstance().getCells().values()) {
            model.addElement(cell);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCells = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lbCells = new javax.swing.JList<SVGCell>(new DefaultListModel<SVGCell>());
        lblAtoms = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lbAtoms = new javax.swing.JList<SVGAtom>(new DefaultListModel<SVGAtom>());
        lblAtomContent = new javax.swing.JLabel();
        panelAtom = new javax.swing.JPanel();
        lblNextActions = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lbNextActions = new javax.swing.JList(new DefaultListModel());
        lblSelectedElement = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtElement = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Atom Viewer");

        lblCells.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCells.setText("Available cells:");

        lbCells.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lbCellsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lbCells);

        lblAtoms.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAtoms.setText("Atoms in cell:");

        lbAtoms.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lbAtomsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lbAtoms);

        lblAtomContent.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAtomContent.setText("Atom:");

        panelAtom.setMaximumSize(new java.awt.Dimension(300, 300));
        panelAtom.setMinimumSize(new java.awt.Dimension(300, 300));
        panelAtom.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout panelAtomLayout = new javax.swing.GroupLayout(panelAtom);
        panelAtom.setLayout(panelAtomLayout);
        panelAtomLayout.setHorizontalGroup(
            panelAtomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelAtomLayout.setVerticalGroup(
            panelAtomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        lblNextActions.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNextActions.setText("Next Actions:");

        jScrollPane3.setPreferredSize(new java.awt.Dimension(300, 130));
        jScrollPane3.setViewportView(lbNextActions);

        lblSelectedElement.setText("Selected element:");

        txtElement.setColumns(20);
        txtElement.setRows(5);
        jScrollPane4.setViewportView(txtElement);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCells)
                        .addGap(83, 83, 83)
                        .addComponent(lblAtoms))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNextActions)
                    .addComponent(lblAtomContent)
                    .addComponent(panelAtom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSelectedElement)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCells)
                    .addComponent(lblAtoms)
                    .addComponent(lblAtomContent)
                    .addComponent(lblSelectedElement))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(panelAtom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblNextActions)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbAtomsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lbAtomsValueChanged
        panelAtom.removeAll();
        if (lbAtoms.getSelectedIndex() >= 0) {
            final SVGAtom atom = lbAtoms.getSelectedValue();
            lbNextActions.setModel(new AbstractListModel() {

                @Override
                public int getSize() {
                    return atom.getNextActions().size();
                }

                @Override
                public Object getElementAt(int i) {
                    return atom.getNextActions().get(i);
                }
            });
            panelAtom.setLayout(new GridLayout(1,1));
            panelAtom.add(getVisualizationElement(atom.getGraph()));
        }
        panelAtom.revalidate();
    }//GEN-LAST:event_lbAtomsValueChanged

    private void lbCellsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lbCellsValueChanged
        final SVGCell cell = lbCells.getSelectedValue();
        lbAtoms.setModel(new AbstractListModel<SVGAtom>() {
            @Override
            public int getSize() {
                return cell.getAtoms().size();
            }

            @Override
            public SVGAtom getElementAt(int i) {
                return cell.getAtoms().get(i);
            }
        });
    }//GEN-LAST:event_lbCellsValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AtomViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AtomViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AtomViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AtomViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AtomViewer dialog = new AtomViewer(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private BasicVisualizationServer<SVGElement, SVGEdge> getVisualizationElement(Graph<SVGElement, SVGEdge> graph) {
        VisualizationViewer<SVGElement, SVGEdge> vv;
        Layout<SVGElement, SVGEdge> layout = new CircleLayout<>(graph);
        layout.setSize(new Dimension(300,300));
        vv = new VisualizationViewer<>(layout);
        vv.setPreferredSize(new Dimension(350,350));
        vv.getRenderContext().setVertexLabelTransformer(new Transformer<SVGElement, String>() {
            @Override
            public String transform(SVGElement i) {
                if (i instanceof SimpleElement) {
                    SimpleElement e = (SimpleElement)i;
                    return e.getID() + " (" + e.getNoElements() + ")";
                }
                return i.getID();
            }            
        });
        vv.getRenderContext().setEdgeLabelTransformer(new Transformer<SVGEdge, String>() {
            @Override
            public String transform(SVGEdge i) {
                return i.getType().name();
            }
        });
        vv.getRenderer().getVertexLabelRenderer().setPosition(Renderer.VertexLabel.Position.CNTR);
        
        DefaultModalGraphMouse gm = new DefaultModalGraphMouse();
        gm.setMode(ModalGraphMouse.Mode.PICKING);
        vv.setGraphMouse(gm);
        PickedState<SVGElement> pickedState = vv.getPickedVertexState();
        pickedState.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent ie) {
                Object obj = ie.getItem();
                if (obj instanceof SVGElement) {
                    SVGElement elem = (SVGElement)obj;
                    String text = elem.toStringWithValues();
                    txtElement.setText(text.replaceAll("\t", "\n"));
                }
            }
        });
        return vv;
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<SVGAtom> lbAtoms;
    private javax.swing.JList<SVGCell> lbCells;
    private javax.swing.JList lbNextActions;
    private javax.swing.JLabel lblAtomContent;
    private javax.swing.JLabel lblAtoms;
    private javax.swing.JLabel lblCells;
    private javax.swing.JLabel lblNextActions;
    private javax.swing.JLabel lblSelectedElement;
    private javax.swing.JPanel panelAtom;
    private javax.swing.JTextArea txtElement;
    // End of variables declaration//GEN-END:variables
}
